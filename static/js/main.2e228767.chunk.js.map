{"version":3,"sources":["abi.js","components/Navigation.js","logo.svg","components/Home.js","components/About.js","components/BuildNotes.js","components/wallet/Connectors.js","components/RPS_ETH_V2.js","App.js","reportWebVitals.js","index.js"],"names":["window","rpsv1_abi","rpsv2_abi","Navigation","Navbar","collapseOnSelect","expand","bg","variant","Container","Brand","Toggle","Collapse","id","Nav","className","to","Home","Row","Col","Image","src","logo","alt","fluid","href","target","rel","About","BuildNotes","Injected","InjectedConnector","supportedChainIds","RPSETH_v2","useWeb3React","active","account","library","activate","deactivate","useState","contractInstance","setContractInstance","etherAmount","setEtherAmount","sender","setSender","playerBalance","setPlayerBalance","contractBalance","setContractBalance","playerOneOpponentAddress","setPlayerOneOpponentAddress","playerTwoOpponentAddress","setPlayerTwoOpponentAddress","playerOneSalt","setPlayerOneSalt","playerTwoSalt","setPlayerTwoSalt","playerOneChoice","setPlayerOneChoice","playerTwoChoice","setPlayerTwoChoice","gameOutcome","setGameOutcome","choiceArray","console","log","methods","getMsgSender","call","from","then","msgsender","catch","err","getPlayerBalance","pb","utils","fromWei","toBN","getContractBalance","cb","etherBalance","toWei","deposit","send","value","receipt","status","gasUsed","withdraw","choiceSelected","undefined","alert","gameChoice","indexOf","salt","sha3","Math","random","encoded","eth","abi","encodeParameters","hash","encoding","bet","startGame","participateGame","revealChoice","endGame","rpsOutCome","events","GetGameOutcome","returnValues","games","gameData","useEffect","initContractInstance","Contract","ci","md","span","offset","InputGroup","Button","onClick","FormControl","placeholder","type","onChange","event","map","choice","i","style","marginRight","getLibrary","provider","Web3","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e228767.chunk.js","sourcesContent":["window.rpsv1_abi = [\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"GetGameOutcome\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Received\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"playerBalances\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\",\n    \"constant\": true\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"fundContract\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\",\n    \"payable\": true\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"deposit\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\",\n    \"payable\": true\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"withdraw\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"getContractBalance\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"contractBalance\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\",\n    \"constant\": true\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"playerAddress\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getPlayerBalance\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"playerBalance\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\",\n    \"constant\": true\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"getMsgSender\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"msgsender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\",\n    \"constant\": true\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"_playerOneChoice\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"_playerTwoChoice\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"_gameStake\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"playGame\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"gameOutcome\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\n\nwindow.rpsv2_abi = [\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"enum RPSv2.GameOutcome\",\n        \"name\": \"\",\n        \"type\": \"uint8\"\n      }\n    ],\n    \"name\": \"GetGameOutcome\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"games\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"playerOne\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"playerTwo\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"stake\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"playerOneChoice\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"playerTwoChoice\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"playerOneHash\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"playerTwoHash\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"internalType\": \"enum RPSv2.GameStatus\",\n        \"name\": \"status\",\n        \"type\": \"uint8\"\n      },\n      {\n        \"internalType\": \"enum RPSv2.GameOutcome\",\n        \"name\": \"outcome\",\n        \"type\": \"uint8\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\",\n    \"constant\": true\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"playerBalances\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\",\n    \"constant\": true\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"gameHash\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"opponent\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"gameStake\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"startGame\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"gameHash\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"opponent\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"participateGame\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"choice\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"salt\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"playerOne\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"revealChoice\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"playerOne\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"endGame\",\n    \"outputs\": [\n      {\n        \"internalType\": \"enum RPSv2.GameOutcome\",\n        \"name\": \"gameResult\",\n        \"type\": \"uint8\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"deposit\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\",\n    \"payable\": true\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"withdraw\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"getContractBalance\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"contractBalance\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\",\n    \"constant\": true\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"playerAddress\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getPlayerBalance\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"playerBalance\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\",\n    \"constant\": true\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"getMsgSender\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"msgsender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\",\n    \"constant\": true\n  }\n];","import { Link } from 'react-router-dom';\nimport { Navbar, Nav, Container } from 'react-bootstrap';\n\nconst Navigation = () => (\n<Navbar collapseOnSelect expand='sm' bg='primary' variant='dark'>\n    <Container>\n        <Navbar.Brand>OSFD Intern</Navbar.Brand>\n        <Navbar.Toggle aria-controls='responsive-navbar-nav' />\n        <Navbar.Collapse id='responsive-navbar-nav'>\n            <Nav className='mr-auto'>\n                <Link to='/' className='nav-link'>Home</Link>\n                <Link to='/about' className='nav-link'>About</Link>\n                <Link to='/rps-ethereum-v2' className='nav-link'>Rock Paper Scissors</Link> \n                <Link to='/build-notes' className='nav-link'>Build Notes</Link>\n                {/* <Link to='/metamask-example' className='nav-link'>MetaMask Login</Link> */}\n                {/* <Link to='/coin-flip' className='nav-link'>Coin Flip</Link> */}\n                {/* <Link to='/rock-paper-scissors' className='nav-link'>Rock, Paper, Scissors v1 for testing</Link> */}\n                {/* <Link to='/rps-ethereum-simple' className='nav-link'>PvC ETH RPS</Link>                 */}\n            </Nav>\n        </Navbar.Collapse>\n    </Container>\n  </Navbar>\n);\nexport default Navigation","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from '../logo.svg';\nimport { Container, Row, Col, Image } from 'react-bootstrap';\n\nconst Home = () => {\n    return (\n        <Container>\n            <Row>\n                <Col className='text-center'>\n                    <h1>\n                        Welcome\n                    </h1>\n                </Col>\n            </Row> \n            <Row>\n                <Col className='text-center'>\n                    <Image src={logo} className=\"App-logo\" alt=\"logo\" fluid />\n                </Col>\n            </Row> \n            <Row>\n                <Col className='text-center'>\n                    <h2>\n                        OSFD Intern DAO ...\n                    </h2>\n                </Col>\n            </Row> \n            <Row>\n                <Col className='text-center'>\n                    <h3>\n                        <Col className='text-center'>\n                        <a \n                        href='/rps-ethereum-v2' \n                        target='RPSETH_v2'>\n                            Rock Paper Scissors Game\n                        </a>\n                        </Col>\n                    </h3>\n                </Col>\n            </Row> \n            <Row>\n                <Col className='text-center'>\n                    <a \n                    href='https://github.com/GNFinder'\n                    target='_blank' rel=\"noreferrer\">\n                        View the GitHub\n                    </a>\n                </Col>\n            </Row> \n            <Row>\n                <Col className='text-center'>\n                    <a \n                    href='https://twitter.com/JamalForbes_'\n                    target='_blank' rel=\"noreferrer\">\n                        View the Twitter\n                    </a>\n                </Col>\n            </Row> \n            <Row>\n                <Col className='text-center'>\n                    <a \n                    href='https://www.notion.so/Rock-Paper-Scissors-The-Cool-Way-7330e28b8dc64fc0b5bc967911b5d93b'\n                    target='_blank' rel=\"noreferrer\">\n                        View the Blog\n                    </a>\n                </Col>\n            </Row> \n        </Container>\n    )\n}\n\nexport default Home\n","import { Container, Row, Col } from 'react-bootstrap';\n\nconst About = () => {\n    return (\n        <Container>\n            <Row className='mt-5'>\n                <Col className='text-center'>\n                    <h1>\n                        OSFD Intern - Rock Paper Scisscors Game\n                    </h1>\n                    <h4>\n                        More info coming soon ... check out the Build Notes to learn more about how to create our Rock Paper Scissors DApp\n                    </h4>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default About\n","import { Container } from 'react-bootstrap';\n\nconst BuildNotes = () => {\n    return (\n        <Container>\n            <h1 className='build-note-title mt-5'>Build Notes</h1>\n            <hr />\n            <h4 className='build-note-section-title'>Round 1</h4>\n            <h5>coming soon ... </h5>\n            {/* <ul>\n                <li>\n                    <p className='build-note-item'>\n                        NOTE: Already had node.js installed - you need to be able to run <i>npm</i> and <i>npx</i> commands\n                    </p>\n                </li>\n                <li>\n                    <p className='build-note-item'>\n                        RAN: <i>npx create-react-app reactsolidity_frontend</i>\n                    </p>\n                </li>\n                <li>\n                    <p className='build-note-item'>\n                        <i>cd reactsolidity_frontend</i>\n                    </p>\n                </li>\n                <li>\n                    <p className='build-note-item'>\n                        Install the React Router: <i>npm install react-router-dom</i>\n                    </p>\n                </li>\n                <li>\n                    <p className='build-note-item'>\n                        Install web3 (what we will use later to talk to MetaMask/Blockchain): <i>npm install web3</i>\n                    </p>\n                </li>\n                <li>\n                    <p className='build-note-item'>\n                        Install bootstrap (for all the time-saving css): <i>npm install react-bootstrap bootstrap</i>\n                    </p>\n                </li>\n                <li>\n                    <p className='build-note-item'>\n                        Start dev server/env: <i>npm start</i>\n                    </p>\n                </li>\n                <li>                    \n                    <p className='build-note-item'>\n                        Build (adds a build folder, necessary for deploying): <i>npm run build</i>\n                    </p>\n                </li>                \n            </ul> */}\n\n            \n            <h4 className='build-note-section-title'>Round 2</h4>\n            <h5>coming soon ... </h5>\n            {/* <ul>\n                <li>\n                    <p className='build-note-item'>\n                        NOTE: Deployed, but Netlify was treating common warnings as errors which I learned after making first update\n                        <br />\n                        You need to go to your Deploy Settings and change your build command so that CI is set to false ... Here is the fix: <i>CI=false npm run build</i>\n                    </p>\n                </li>\n                <li>\n                    <p className='build-note-item'>\n                        Added Components:\n                    </p> \n                    <ul>\n                        <li><i>Navigation</i></li>\n                        <li><i>Home</i></li>\n                        <li><i>About</i></li>\n                        <li><i>BuildNotes</i></li>\n                        <li><i>CoinFlip</i></li>\n                    </ul>\n                </li>\n                <li>\n                    <p className='build-note-item'>\n                        Set up Router in App.js\n                    </p>\n                </li>\n                <li>\n                    <p className='build-note-item'>\n                        ...more notes on the router, switch, and nav later...\n                    </p>\n                </li>\n            </ul> */}\n\n            <h4 className='build-note-section-title'>Round 3</h4>\n            <h5>coming soon ... </h5>\n            {/* <ul>\n                <li>\n                    <p className='build-note-item'>\n                        NOTE: to display bootstrap in HTML vs. React Bootstrap, you can view these commits\n                    </p>\n                    <ul>\n                        <li>\n                            Bootstrap you have already seen in HTML: <a href='https://github.com/nathan-websculpt/reactsolidity_frontend/commit/a41283a15175401dc8e760114fca402d02028b93' target='_blank'>Start at this commit</a>\n                        </li>\n                        <li>\n                            Swapped to React Bootstrap: <a href='https://github.com/nathan-websculpt/reactsolidity_frontend/commit/cf5b3af32e471f620147581d77fa245805916257' target='_blank'>End with this commit</a>\n                        </li>\n                    </ul>\n                </li>\n                <li>\n                    Note: it is at this point I was making some design decisions and package choices for how I will later display code snippets (for the tutorial aspects of this site)\n                </li>\n            </ul> */}\n            \n            <h4 className='build-note-section-title'>Rock, Paper, Scissors game added</h4>\n            <ul>\n                <li>\n                    <p className='build-note-item'>\n                        A simple game that uses an array of choices and determines win/lose/draw by string concatenation \n                    </p>\n                </li>\n                <li>\n                    <p className='build-note-item'>\n                        A variation of this logic will be the first iteration of the Solidity/Ethereum game\n                    </p>\n                </li>\n            </ul>\n            \n            <h4 className='build-note-section-title'>Rock, Paper, Scissors Ethereum Game (starting)</h4>\n            <h5>coming soon ... </h5>\n            {/* <ul>\n                <li>\n                    <p className='build-note-item'>\n                        NOTE: starting with the basics like the Web3 Provider and a MetaMask login\n                    </p>\n                </li>\n                <li>\n                    <p className='build-note-item'>\n                        Going to be using <a href='https://github.com/NoahZinsmeister/web3-react' target='_blank'>web3-react</a> \n                    </p>\n                </li>\n                <li>\n                    <p className='build-note-item'>\n                        Installed: <i>npm i @web3-react/core</i>\n                    </p>\n                </li>\n                <li>\n                    <p className='build-note-item'>\n                        Installed: <i>npm i @web3-react/injected-connector</i>\n                    </p>\n                </li>\n                <li>\n                    <p className='build-note-item'>\n                        Added the InjectedConnector for MetaMask to a Component - <i>'/wallet/Connectors.js'</i>\n                    </p>\n                </li>\n                <li>\n                    <p className='build-note-item'>\n                        <b>App.js changes</b>\n                    </p>\n                    <ul>\n                        <li>\n                            <p className='build-note-item'>\n                                <i>added Web3ReactProvider - '@web3-react/core'</i>\n                            </p>\n                        </li>\n                        <li>\n                            <p className='build-note-item'>\n                                <i>added Web3 - 'web3'</i>\n                            </p>\n                        </li>\n                        <li>\n                            <p className='build-note-item'>\n                                created <i>getLibrary function</i> which will return a new <i>Web3</i> object (using the provider)\n                            </p>\n                        </li>\n                        <li>\n                            <p className='build-note-item'>\n                                wrapped whole app in <i>Web3ReactProvider</i> \n                            </p>\n                        </li>\n                    </ul>\n                </li>\n                <li>\n                    <p className='build-note-item'>\n                        <b>RPSETH_simple component created</b> (a simple start to Rock, Paper, Scissors on Ethereum)\n                    </p>\n                    <ul>\n                        <li>\n                            <p className='build-note-item'>\n                                <i>added <i>Injected</i> (the InjectedConnector from before) - './wallet/Connectors'</i>\n                            </p>\n                        </li>\n                        <li>\n                            <p className='build-note-item'>\n                                <i>added useWeb3React - '@web3-react/core'</i>\n                            </p>\n                        </li>\n                        <li>\n                            <p className='build-note-item'>\n                                used <i>useWeb3React function</i> to get account/address information (as well as activate/deactivate functions)\n                            </p>\n                        </li>\n                        <li>\n                            <p className='build-note-item'>\n                                Simple buttons to connect and disconnect a MetaMask button added\n                            </p>\n                        </li>\n                    </ul>\n                </li>\n            </ul> */}\n        </Container>\n    )\n}\n\nexport default BuildNotes\n","//MetaMask Connector\n\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\n\n//9_28_2021: added '1337' for ganache dev\nexport const Injected = new InjectedConnector({ //InjectedConnector for MetaMask (there are other connectors for other wallets)\n    supportedChainIds: [1, 3, 4, 5, 42, 1337], \n})\n\n//a core idea of Web3 (and Dapps) is the 'Connector'\n//a 'Connector' is a piece of code that communicates with your Dapp, and it has two core components (wallet and node)\n//has connection to wallet which can sign things and a connection to a node provider\n\n//InjectedConnector is an abstraction layer on top of MetaMask logic","import { useEffect, useState } from 'react';\nimport { Container, Row, Col, Button, FormControl, InputGroup } from 'react-bootstrap';\nimport { Injected } from './wallet/Connectors';\nimport { useWeb3React } from '@web3-react/core';\nimport '../abi.js';\n\nexport default function RPSETH_v2() {\n\n    const { active, account, library, activate, deactivate } = useWeb3React();\n\n    //instance of the Smart Contract\n    const [contractInstance, setContractInstance] = useState('');\n\n    //text-boxes\n    const [etherAmount, setEtherAmount] = useState('');\n    const [sender, setSender] = useState('');\n    const [playerBalance, setPlayerBalance] = useState('');\n    const [contractBalance, setContractBalance] = useState('');\n\n    //player values\n    const [playerOneOpponentAddress, setPlayerOneOpponentAddress] = useState('');\n    const [playerTwoOpponentAddress, setPlayerTwoOpponentAddress] = useState('');\n    const [playerOneSalt, setPlayerOneSalt] = useState('');\n    const [playerTwoSalt, setPlayerTwoSalt] = useState('');\n\n    //RPS values\n    const [playerOneChoice, setPlayerOneChoice] = useState(null); //What player one selects\n    const [playerTwoChoice, setPlayerTwoChoice] = useState(null); //What player two selects\n    const [gameOutcome, setGameOutcome] = useState(null); //Win, Lose, or Draw\n    const choiceArray = ['rock', 'paper', 'scissors']; //Array will map to three buttons   \n\n    //init the Smart Contract Instance - when library is available\n    useEffect(() => {\n        //library gives access to web3\n        if(library != null) {\n            initContractInstance();\n            console.log('useEffect() initialized the contract instance');\n            async function initContractInstance() {        \n                var ci = await new library.eth.Contract( window.rpsv2_abi , '0x4968012edcB9Cd490582684CE76718d222085bC9');\n                setContractInstance(ci);\n                console.log(\"User interacted with OSFD: Rock Paper Scissors smart contract...\");\n            }\n        } else {\n            console.log('[WAIT] Connect to OSFD network...');\n        }\n    }, [library]);\n    \n    async function connectToMetaMask() {\n        try {\n            await activate(Injected); //calls the activate method provided by useWeb3React()\n        } catch (ex) {\n            console.log(ex);\n        }\n    }\n\n    async function disconnectMetaMask() {\n        try {\n            await deactivate(); //calls the deactivate method provided by useWeb3React()\n        } catch (ex) {\n            console.log(ex);\n        }\n    }\n\n    //view data for testing\n    async function getMsgSender() {  \n        await contractInstance.methods.getMsgSender().call({ from: account }).then(function(msgsender) {\n            setSender(msgsender);\n        }).catch(err => console.log(err));\n    }\n    async function getPlayerBalance(){\n        await contractInstance.methods.getPlayerBalance(account).call().then(function(playerBalance) {\n            let pb = library.utils.fromWei(library.utils.toBN(playerBalance), 'ether');\n            setPlayerBalance(pb);\n        }).catch(err => console.log(err));\n    }\n    async function getContractBalance() {\n        await contractInstance.methods.getContractBalance().call().then(function(contractBalance) {\n            let cb = library.utils.fromWei(library.utils.toBN(contractBalance), 'ether');\n            setContractBalance(cb);\n        }).catch(err => console.log(err));        \n    }\n    //END: view data for testing\n\n\n    //Ether deposits && withdrawals\n    async function deposit() {\n        let etherBalance = library.utils.toWei(library.utils.toBN(etherAmount), 'ether');\n\n        await contractInstance.methods.deposit().send({ from: account, value: etherBalance}).then(function(receipt){\n            console.log('receipt from deposit _> status: ' + receipt.status + ', gas: ' + receipt.gasUsed);\n        }).catch(err => console.log(err));\n    } \n    async function withdraw() {\n        await contractInstance.methods.withdraw().send({ from: account }).then(function(receipt){\n            console.log('receipt from withdraw _> status: ' + receipt.status + ', gas: ' + receipt.gasUsed);\n        }).catch(err => console.log(err));\n    }\n    //END: Ether deposits && withdrawals\n\n\n    //Rock, Paper, Scissors - Play Game\n    async function startGame(choiceSelected) {\n        // eslint-disable-next-line\n        if(library == undefined) {\n            alert('Please connect to metamask...');\n        }\n        else {\n            let gameChoice = choiceArray.indexOf(choiceSelected) + 1;\n            setPlayerOneChoice(gameChoice);\n\n            let salt =  library.utils.sha3(\"\" + Math.random());\n            let encoded = library.eth.abi.encodeParameters(['uint256', 'bytes32'],[gameChoice, salt]);\n            let hash = library.utils.sha3(encoded, {encoding: 'hex'});\n            setPlayerOneSalt(salt);\n\n            // console.log('Player one salt: ', salt);// Only for testing - remove \n            // console.log('Player one hash: ', hash);// Only for testing - remove \n\n            setPlayerTwoOpponentAddress(account);\n            \n            // eslint-disable-next-line\n            if (hash !== undefined && hash !== null) {\n                var bet = library.utils.toWei(library.utils.toBN('1'), 'ether');// hardcoded to 1 ether - could be changed to exact deposit amount in future\n                \n                // notes: Can we send this transaction to the blockchain in a later function call, i.e \"revealChoice\"\n                await contractInstance.methods.startGame(hash, playerOneOpponentAddress, bet).send({ from: account }).then(function(receipt){\n                    console.log('receipt from startGame _> status: ' + receipt.status + ', gas: ' + receipt.gasUsed);\n                }).catch(err => console.log(err)); \n            }             \n        }\n    }\n    async function participateGame(choiceSelected) {\n        // eslint-disable-next-line\n        if(library == undefined) {\n            alert('Please connect to metamask...');\n        }\n        else {\n            let gameChoice = choiceArray.indexOf(choiceSelected) + 1;\n            setPlayerTwoChoice(gameChoice);\n\n            let salt =  library.utils.sha3(\"\" + Math.random());\n            let encoded = library.eth.abi.encodeParameters(['uint256', 'bytes32'],[gameChoice, salt]);\n            let hash = library.utils.sha3(encoded, {encoding: 'hex'});\n            setPlayerTwoSalt(salt);\n\n            // console.log('Player two salt: ', salt);// Only for testing - remove \n            // console.log('Player two hash: ', hash);// Only for testing - remove \n\n            await contractInstance.methods.participateGame(hash, playerTwoOpponentAddress).send({ from: account }).then(function(receipt){\n                console.log('receipt from participateGame _> status: ' + receipt.status + ', gas: ' + receipt.gasUsed);\n            }).catch(err => console.log(err)); \n        }\n    }\n    //END: Rock, Paper, Scissors - Play Game\n\n    async function revealGamePlayerOne() {\n        await contractInstance.methods.revealChoice(playerOneChoice, playerOneSalt, playerTwoOpponentAddress).send({ from: account }).then(function(receipt){\n            console.log('receipt from revealGamePlayerOne _> status: ' + receipt.status + ', gas: ' + receipt.gasUsed);\n        }).catch(err => console.log(err)); \n    }\n    async function revealGamePlayerTwo() {\n        await contractInstance.methods.revealChoice(playerTwoChoice, playerTwoSalt, playerTwoOpponentAddress).send({ from: account }).then(function(receipt){\n            console.log('receipt from revealGamePlayerTwo _> status: ' + receipt.status + ', gas: ' + receipt.gasUsed);\n        }).catch(err => console.log(err)); \n    }\n    async function endGame() {\n        await contractInstance.methods.endGame(playerTwoOpponentAddress).send({ from: account }).then(function(receipt){\n            console.log('receipt from endGame _> status: ' + receipt.status + ', gas: ' + receipt.gasUsed);\n            let rpsOutCome = receipt.events.GetGameOutcome.returnValues[0];\n            console.log('Player ' + rpsOutCome, 'Won!'); // read the event (uint) fired by the contract\n            switch (rpsOutCome) {\n                case '0':\n                  setGameOutcome('IT IS A DRAW!🤝')\n                  break\n                case '1':\n                  setGameOutcome('PLAYER ONE WINS!', console.log('🤑Player One can withdraw the Jackpot!!'))\n                  break\n                case '2':\n                  setGameOutcome('PLAYER TWO WINS!', console.log('🤑Player Two can withdraw the Jackpot!!'))\n                  break\n                case '3':\n                    setGameOutcome('🚨...there was a problem with this game')\n                    break\n                default: \n                    setGameOutcome('🙌...Play again!'); // \n                    break    \n            }\n            setPlayerOneChoice(playerOneChoice);\n            setPlayerTwoChoice(playerTwoChoice);\n        }).catch(err => console.log(err)); \n    }\n    async function viewGame() {\n        let gameData = await contractInstance.methods.games(playerTwoOpponentAddress).call();\n        console.log('Result from View Game: ', gameData);\n    }\n\n    return (\n        <Container>\n            <Row className='mt-5'>\n                <Col className='text-center'>\n                    <h1>Rock Paper Scissors - (securely)</h1>\n                    <h3>Start by connecting your wallet</h3>\n                    <h4>Deposit & Play - then Player Two may enter!</h4>\n                    <h5>End Game and Winner Takes All💰</h5>\n                </Col>    \n            </Row> \n            <Row className='mt-5'>\n                <Col md={{ span: 4, offset: 2 }}>\n                    <InputGroup>\n                        <Button variant='primary' onClick={ connectToMetaMask }>Connect to MetaMask</Button>\n                        <Button variant='outline-primary' onClick={ disconnectMetaMask }>Disconnect</Button>\n                    </InputGroup>\n                </Col>\n                <Col md={{ span: 3, offset: 1 }}>\n                    <InputGroup>\n                        <FormControl\n                            placeholder='Amount in Ether'\n                            type='number' value={ etherAmount } \n                            onChange={ (event) => \n                                setEtherAmount(event.target.value) }/>\n                        <Button variant='primary' onClick={ deposit }>Deposit</Button>\n                    </InputGroup>\n                </Col>  \n            </Row>                  \n            <Row className='mt-3 mb-5'>\n                <Col className='text-center'>\n                    {active ? <span>Connected Account: <b>{ account }</b></span> : <span>Not Connected</span>} \n                </Col>    \n            </Row>  \n            <hr />    \n            <Row className='mt-3'>  \n                <Col className='text-center'>\n                    <h5>Test Contract Interaction</h5>\n                </Col>\n            </Row>\n            <Row className='mt-3 mb-5'>                    \n                <Col md={{ span: 3, offset: 2 }}>\n                    <InputGroup>\n                        <FormControl\n                            placeholder='...Msg.Sender'\n                            type='text' value={ sender } \n                            onChange={ (event) => \n                                setSender(event.target.value) }/>\n                        <Button variant='dark' onClick={ getMsgSender }>Msg.Sender</Button>\n                    </InputGroup>\n                    \n                    <InputGroup className='mt-1'>\n                        <FormControl\n                            placeholder='...player balance'\n                            type='text' value={ playerBalance } \n                            onChange={ (event) => \n                                setPlayerBalance(event.target.value) }/>\n                        <Button variant='dark' onClick={ getPlayerBalance }>Player Balance</Button>\n                    </InputGroup>\n                    \n                    <InputGroup className='mt-1'>\n                        <FormControl\n                            placeholder='...contract balance'\n                            type='text' value={ contractBalance } \n                            onChange={ (event) => \n                                setContractBalance(event.target.value) }/>\n                        <Button variant='dark' onClick={ getContractBalance }>Contract Balance</Button>\n                    </InputGroup>\n                </Col>  \n                <Col>\n                    <Row className='mt-5'>\n                        <Col className='text-center'>\n                            <Button variant='warning'\n                                onClick={ withdraw }>\n                                    withdraw\n                            </Button>\n                        </Col>    \n                    </Row> \n                </Col>\n            </Row> \n            <hr />                    \n            <Row className='mt-5'>\n                <Col className='text-center'>\n                    <h1>\n                        Rock Paper Scissors\n                    </h1>\n                </Col>\n            </Row>\n\n            <Row className='mt-1'>\n                <Col className='text-center'>\n                    <Row className='mt-2'>\n                    <Col className='text-center'>\n                        <h4>\n                            PLAYER ONE\n                        </h4>\n                        <br />\n                        <h6>Opponent</h6>\n                        <FormControl\n                            placeholder='Opponent Address'\n                            type='text' value={ playerOneOpponentAddress } \n                            onChange={ (event) => \n                                setPlayerOneOpponentAddress(event.target.value) }/>\n                    </Col>\n                    </Row>\n                    <Row className='mt-2'>\n                        <Col className='text-center'>\n                            {\n                            choiceArray.map((choice, i) =>\n                            <Button style={{marginRight: '15px'}} key={i} onClick={() => startGame(choice)}>\n                                { choice }\n                            </Button>\n                            )}\n                        </Col>\n                    </Row>   \n                </Col>\n                \n                <Col className='text-center'>\n                    <Row className='mt-2'>\n                    <Col className='text-center'>\n                        <h4>\n                            PLAYER TWO\n                        </h4>\n                        <br />\n                        <h6>Opponent</h6>\n                        <FormControl\n                            placeholder='Opponent Address'\n                            type='text' value={ playerTwoOpponentAddress } \n                            onChange={ (event) => \n                                setPlayerTwoOpponentAddress(event.target.value) }/>\n                    </Col>\n                    </Row>\n                    <Row className='mt-2'>\n                        <Col className='text-center'>\n                            {\n                            choiceArray.map((choice, i) =>\n                            <Button style={{marginRight: '15px'}} key={i} onClick={() => participateGame(choice)}>\n                                { choice }\n                            </Button>\n                            )}\n                        </Col>\n                    </Row>   \n                </Col>\n            </Row>\n\n            <Row className='mt-5 mb-5'>\n                <Col className='text-center'>\n                    <h1><b>\n                        { gameOutcome }\n                    </b></h1>\n                </Col>\n            </Row>\n            <Row className='mt-2 mb-5'>\n                <Col md={{ span: 4, offset: 2 }} className='text-center'>\n                    <h4>Player One Played: <b>{ playerOneChoice }</b></h4>\n                    <br />\n                    <Button variant='dark' onClick={ revealGamePlayerOne }>Player One Reveal</Button>\n                </Col>\n                <Col md={4} className='text-center'>\n                    <h4>Player Two Played: <b>{ playerTwoChoice }</b></h4>\n                    <br />\n                    <Button variant='dark' onClick={ revealGamePlayerTwo }>Player Two Reveal</Button>\n                </Col>\n            </Row> \n            <Row className='mt-2 mb-5'>\n                <Col md={{ span: 1, offset: 5 }} className='text-center'>\n                    <Button variant='dark' onClick={ endGame }>End Game</Button>\n                </Col>\n                <Col md={1} className='text-center'>\n                    <Button variant='dark' onClick={ viewGame }>View Game</Button>\n                </Col>\n            </Row> \n\n        </Container>\n    )\n}\n","//import CoinFlip from './components/CoinFlip';\nimport './App.css';\nimport Navigation from './components/Navigation';\nimport Home from './components/Home';\nimport About from './components/About';\nimport BuildNotes from './components/BuildNotes';\nimport RPS_ETH_V2 from './components/RPS_ETH_V2';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Web3ReactProvider } from '@web3-react/core';\nimport Web3 from 'web3';\n\n//returns a new Web3 object, with provider\nfunction getLibrary(provider) {\n  return new Web3(provider);\n}\n\nfunction App() {\n  return (\n    //wrapping everything with the provider\n    //gives access to all the good stuff for talking to blockchain\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Router>\n        <div>\n          <Navigation />\n            <Switch>\n              <Route exact path='/'>\n                <Home />\n              </Route>\n              <Route exact path='/about'>\n                <About />\n              </Route>\n              <Route exact path='/build-notes'>\n                <BuildNotes />\n              </Route>\n              <Route exact path='/rps-ethereum-v2'>\n                <RPS_ETH_V2 />\n              </Route>\n              {/* <Route exact path='/coin-flip'>\n                <CoinFlip />\n              </Route> */}\n              {/* <Route exact path='/metamask-example'>\n                <MetaMaskExample />\n              </Route> */}\n            </Switch>\n        </div>\n      </Router>\n    </Web3ReactProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}